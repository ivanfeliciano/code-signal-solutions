# grid = [['.', '.', '.', '.', '2', '.', '.', '9', '.'],
#         ['.', '.', '.', '.', '6', '.', '.', '.', '.'],
#         ['7', '1', '.', '.', '7', '5', '.', '.', '.'],
#         ['.', '7', '.', '.', '.', '.', '.', '.', '.'],
#         ['.', '.', '.', '.', '8', '3', '.', '.', '.'],
#         ['.', '.', '8', '.', '.', '7', '.', '6', '.'],
#         ['.', '.', '.', '.', '.', '2', '.', '.', '.'],
#         ['.', '1', '.', '2', '.', '.', '.', '.', '.'],
#         ['.', '2', '.', '.', '3', '.', '.', '.', '.']]

grid  = [[".",".",".",".",".",".","5",".","."], 
 [".",".",".",".",".",".",".",".","."], 
 [".",".",".",".",".",".",".",".","."], 
 ["9","3",".",".","2",".","4",".","."], 
 [".",".","7",".",".",".","3",".","."], 
 [".",".",".",".",".",".",".",".","."], 
 [".",".",".","3","4",".",".",".","."], 
 [".",".",".",".",".","3",".",".","."], 
 [".",".",".",".",".","5","2",".","."]]
# grid = [['.', '.', '.', '1', '4', '.', '.', '2', '.'],
#         ['.', '.', '6', '.', '.', '.', '.', '.', '.'],
#         ['.', '.', '.', '.', '.', '.', '.', '.', '.'],
#         ['.', '.', '1', '.', '.', '.', '.', '.', '.'],
#         ['.', '6', '7', '.', '.', '.', '.',     '.', '9'],
#         ['.', '.', '.', '.', '.', '.', '8', '1', '.'],
#         ['.', '3', '.', '.', '.', '.', '.', '.', '6'],
#         ['.', '.', '.', '.', '.', '7', '.', '.', '.'],
#         ['.', '.', '.', '5', '.', '.', '.', '7', '.']]

def sudoku2(grid):
    # rows
    for i in range(len(grid)):
        aux_set = set()
        for j in range(len(grid)):
            if grid[i][j] == ".": continue
            if not grid[i][j] in aux_set: aux_set.add(grid[i][j]); continue 
           return False
    # cols
    for i in range(len(grid)):
        aux_set = set()
        for j in range(len(grid)):
            if grid[j][i] == ".": continue
            if not grid[j][i] in aux_set: aux_set.add(grid[j][i]); continue
            return False
    # subgrids
    for i in range(0, len(grid), 3):
        for j in range(0, len(grid), 3):
            flat =[]
            for k in range(3):
                for l in range(3):
                    flat.append(grid[i + k][j + l])
            aux_set = set()
            for k in flat:
                if k == ".": continue
                if k not in aux_set: aux_set.add(k); continue
                return False
    return True
                
